#!/bin/sh

# Adapted from the "fork" admin-defined command from Gitolite.
# Modified to ensure the base path remains constant

from=$1
to=$2

. $(dirname $0)/adc.common-functions

get_rights_and_owner $from
[ -z "$perm_read" ] && die "no read permissions on $from"

oldIFS=$IFS
IFS="/"
fromarray=( $from )
toarray=( $to )
IFS=$oldIFS

if [[ ${fromarray[0]} == "scratch" ]]; then
    if [[ ${toarray[0]} != "scratch" ]]; then
        die "Cannot clone from scratch to some other area."
    fi
elif [[ ${toarray[0]} == "scratch" ]]; then
    die "Cannot clone to scratch from some other area."
elif [[ ${fromarray[0]} == "clones" ]]; then
    if [[ ${toarray[0]} != "clones" ]]; then
        die "Cannot clone from clones to another area."
    elif [[ ${fromarray[1]} != ${toarray[1]} ]]; then
        die "Cannot clone between projects."
    fi
elif [[ ${fromarray[0]} != "clones" ]]; then
    if [[ ${toarray[0]} != "clones" ]]; then
        die "Must clone into the clones namespace."
    elif [[ ${fromarray[0]} != ${toarray[1]} ]]; then
        die "Cannot clone between projects."
    fi
fi

# Congratulations. You made it.

echo "Cloning, please be patient..."

# clone $from to $to
git clone --bare -l $GL_REPO_BASE_ABS/$from.git $GL_REPO_BASE_ABS/$to.git
[ $? -ne 0 ] && exit 1

# fix up creator, gitweb owner, and hooks
cd $GL_REPO_BASE_ABS/$to.git
echo $GL_USER > gl-creater
git config gitweb.owner "$GL_USER"
( cd $HOME;perl -le 'do ".gitolite.rc"; print $GL_WILDREPOS_DEFPERMS' ) |
    SSH_ORIGINAL_COMMAND="setperms $to" $GL_BINDIR/gl-auth-command $GL_USER
cp -R $GL_REPO_BASE_ABS/$from.git/hooks/* $GL_REPO_BASE_ABS/$to.git/hooks
touch git-daemon-export-ok

if [ -n "$GL_WILDREPOS_DEFPERMS" ]; then
  echo "$GL_WILDREPOS_DEFPERMS" > gl-perms
fi

echo $from > kde-cloned-from

# run gitolite's post-init hook if you can (hook code expects GL_REPO to be set)
export GL_REPO; GL_REPO="$to"
[ -x hooks/gl-post-init ] && hooks/gl-post-init
