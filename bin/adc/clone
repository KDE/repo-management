#!/bin/sh

# Adapted from the "fork" admin-defined command from Gitolite.
# Modified to ensure the base path remains constant

from=$1
to=$2

. $(dirname $0)/adc.common-functions

get_rights_and_owner $from
[ -z "$perm_read" ] && die "no read permissions on $from"

get_rights_and_owner $to
[ -z "$perm_create" ] && die "no create permissions on $to"

oldIFS=$IFS
IFS="/"
fromarray=( $from )
toarray=( $to )
IFS=$oldIFS

if [[ ${fromarray[0]} != ${toarray[0]} ]]; then
    die "Cannot clone a repo from one project to another."
fi

# clone $from to $to
git clone --bare -l $GL_REPO_BASE_ABS/$from.git $GL_REPO_BASE_ABS/$to.git
[ $? -ne 0 ] && exit 1

# fix up creator, gitweb owner, and hooks
cd $GL_REPO_BASE_ABS/$to.git
echo $GL_USER > gl-creater
git config gitweb.owner "$GL_USER"
( cd $HOME;perl -le 'do ".gitolite.rc"; print $GL_WILDREPOS_DEFPERMS' ) |
    SSH_ORIGINAL_COMMAND="setperms $to" $GL_BINDIR/gl-auth-command $GL_USER
cp -R $GL_REPO_BASE_ABS/$from.git/hooks/* $GL_REPO_BASE_ABS/$to.git/hooks
touch git-daemon-export-ok

if [ -n "$GL_WILDREPOS_DEFPERMS" ]; then
  echo "$GL_WILDREPOS_DEFPERMS" > gl-perms
fi

# run gitolite's post-init hook if you can (hook code expects GL_REPO to be set)
export GL_REPO; GL_REPO="$to"
[ -x hooks/gl-post-init ] && hooks/gl-post-init
