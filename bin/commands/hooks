#!/bin/sh

# Usage:    ssh git@host hooks <command> <repo>
#
# Enable or disable hooks. You must be an administrator to run this command.

die() { echo "$@" >&2; exit 1; }
usage() { perl -lne 'print substr($_, 2) if /^# Usage/../^$/' < $0; exit 1; }
[ -z "$2" ] && usage
[ "$1" = "-h" ] && usage
[ -z "$GL_USER" ] && die GL_USER not set

RB=`gitolite query-rc GL_REPO_BASE`;            cd $RB

cmd=$1
repo=$2

if [ "$cmd" = "enable" ]
then

    [ -d $repo.git ] || die "Not a valid repository"
    [ ! -f $repo.git/kde-hooks-off ] && die "Hooks already enabled on $repo"
    rm $repo.git/kde-hooks-off
    echo "Hooks are enabled"

elif [ "$cmd" = "disable" ]
then

    gitolite access -q gitolite-admin $GL_USER W any || die "You are not authorised"
    [ -d $repo.git ] || die "Not a valid repository"
    [ -f $repo.git/kde-hooks-off ] && die "Hooks already disabled on $repo"
    touch $repo.git/kde-hooks-off
    echo "Hooks are disabled"

else
    die "Not a valid command"
fi

