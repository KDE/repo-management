#!/bin/sh
#
# A hook script that sends commit notifications.
# Called by git-receive-pack with arguments: refname sha1-old sha1-new
#
# To enable this hook, make this file executable by "chmod +x update".
# copyright this dude http://blog.mwolson.org/tech/a_month_and_a_half_of_git.html

refname="$1"
oldrev="$2"
newrev="$3"

# Safety check
if [ -z "$GIT_DIR" ]; then
        echo "Don't run this script from the command line." >&2
        echo " (if you want, you could supply GIT_DIR then run" >&2
        echo "  $0 <ref> <oldrev> <newrev>)" >&2
        exit 1
fi

if [ -z "$refname" ] || [ -z "$oldrev" ] || [ -z "$newrev" ]; then
        echo "Usage: $0 <ref> <oldrev> <newrev>" >&2
        exit 1
fi

for f in $HOME/.gitolite.down $PWD/.gitolite.down
  do
    if [ -f $f ]
      then
        echo >&2
        echo '*** Sorry, the repositories are down for maintenance' >&2
        echo '*** Please try again in a short while' >&2
        echo >&2
        cat $f >&2
        exit 1
    fi
done

# Prepare the list of revisions to check, etc
revdiff="$newrev"
if [ $oldrev != "0000000000000000000000000000000000000000" ]; then
    revdiff="$(git merge-base $oldrev $newrev)..$newrev"
fi

revlist=$(git rev-parse --not --all | grep -v $oldrev | git rev-list --reverse --stdin $revdiff)

if [ ! -f kde-repo-uid ]; then
    currrepoid=$(pwd | sha1sum | cut -c -8)
    $(cat $currrepoid > kde-repo-uid)
fi

# Setup essential variables
project=$(cd ..; basename $(pwd))
reponame=$(basename $(pwd))
mgmtdir="/home/git/repo-management"

# HACK: Undo this when the transition described in bug 253278 is complete.
if [ "$project" == "repositories" ]; then
    repopath="$reponame"
else
    repopath="$project/$reponame"
fi

# not using project/reponame from above as I'm not sure if they might go away once the move is all settled
currpath=$(pwd)
currdir=$(basename $(pwd))
parentpath=$(cd ..; pwd)
parentdir=$(cd ..; basename $(pwd))
seconddir=$(cd ..; cd ..; basename $(pwd))
thirddir=$(cd ..; cd ..; cd ..; basename $(pwd))
urlpath=
url=
if [ $parentdir == "sysadmin" -o $currdir == "gitolite-admin.git" ]; then
    #do nothing; sysadmin repos private, for now
    url=
elif [ $seconddir == "scratch" -o $thirddir == "clones" ]; then
    urlpath=${currpath#/srv/kdegit/repositories/}
    url="http://gitweb.kde.org/$urlpath/commit/$newrev"
elif [ $parentpath == "/srv/kdegit/repositories" ]; then
    urlpath=${currdir//\.git/}
    url="http://projects.kde.org/projects/$urlpath/repository/revisions/$newrev"
fi

if [ ! -z $url ]; then
    echo "In a few minutes this commit will be available for viewing at $url"
fi

# Check EOL style
eoldir=$mgmtdir/repo-configs/eol/$repopath
if [ ! -f $eoldir/skip-eol ]; then
    for commit_id in $revlist ; do
        $mgmtdir/bin/test-eol-style.pl ${commit_id}
        if [ $? -ne 0 ]; then
            exit 1
        fi
    done
fi

# Send email
commitfilterdir=$mgmtdir/repo-configs/commitfilter/$repopath
if [ -f $commitfilterdir/filtername ] && [ -f $commitfilterdir/svnpath ]; then
    echo "Triggering Commitfilter and Bugzilla updates..."
    for commit_id in $revlist ; do
        $mgmtdir/bin/email-git ${commit_id} $(cat $commitfilterdir/filtername) $(cat $commitfilterdir/svnpath)
    done
fi

# Update CIA
ciadir=$mgmtdir/repo-configs/cia/$repopath
if [ -f $ciadir/projectname ] && [ -f $ciadir/urlprefix ]; then
    echo "Sending CIA.vc update..."
    for merged in $revlist ; do
        $mgmtdir/bin/ciabot_multi.sh ${refname} ${merged} $(cat $ciadir/projectname) $(cat $ciadir/urlprefix)
    done
fi

# --- Finished
exit 0

