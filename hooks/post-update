#!/bin/bash

mgmtdir="/home/git/repo-management"
metadatadir="/home/git/kde-build-metadata/"
kdedevscripts="/home/git/kde-dev-scripts/"
kdeprojects="/home/git/kde_projects.xml"
currpath=$(pwd)
urlpath=${currpath#/srv/git/repositories/}

# Poking anongit mirrors to cause immediate update
for mirror in `cat $mgmtdir/config/enabled_anongits.cfg`; do
       mirror=$(dig +short $mirror)
       curl --connect-timeout 1 --max-time 1 --resolve anongit.kde.org:80:$mirror http://anongit.kde.org/updateRepo/$urlpath &>/dev/null
done

# Initiate remote server update
remote_update_url=$mgmtdir/repo-configs/remote-update/$urlpath
if [ -f $remote_update_url ]; then
    remoteurl=`cat $remote_update_url`
    python $mgmtdir/bin/update-repo-mirror.py $urlpath $remoteurl &> /dev/null &
fi

# Kickoff a Jenkins build....
jenkinsauth=`cat ${HOME}/jenkins-credentials`
logicgroups="stable-qt4 latest-qt4 kf5-qt5 stable-kf5-qt5"
cleanpath=${urlpath/\/-}
cleanpath=${cleanpath/.git/}
for ref; do
    updatedref=${ref#refs/heads/}
    virtualmodulepath=`$kdedevscripts/kde-project-info -f $kdeprojects -p $cleanpath`
    for logicgroup in $logicgroups; do
        branchforlogicgroup=`$metadatadir/tools/list_preferred_repo_branch -f $metadatadir/logical-module-structure $logicgroup $virtualmodulepath`
        if [ "$branchforlogicgroup" = "<nothing set> (use master?)" ]; then
            branchforlogicgroup=master
        fi
        if [ "$branchforlogicgroup" = "$updatedref" ]; then
            jenkinsname="none"
            if [ $logicgroup = "stable-qt4" ]; then
                jenkinsname="stable"
            elif [ $logicgroup = "latest-qt4" ]; then
                jenkinsname="master"
            elif [ $logicgroup = "stable-kf5-qt5" ]; then
                jenkinsname="stable_qt5"
            elif [ $logicgroup = "kf5-qt5" ]; then
                jenkinsname="master_qt5"
            fi
            if [ $jenkinsname != "none" ]; then
                curl --connect-timeout 1 --max-time 1 "http://build.kde.org/job/${cleanpath}_${jenkinsname}/build?token=${jenkinsauth}-${cleanpath}&cause=Triggered%20by%20commit" &>/dev/null
            fi
        fi
    done
done

# Update local information
git update-server-info

# Repository specific hooks - websites/build-kde-org
if [[ "$urlpath" == "websites/build-kde-org.git" ]]; then
    curl --connect-timeout 10 --max-time 10 "https://build-sandbox.kde.org/git/notifyCommit?url=git://anongit.kde.org/websites/build-kde-org" &> /dev/null
fi

# Repository specific hooks - Trojita
if [[ "$urlpath" == "trojita.git" ]]; then
    obsauth=`cat ${HOME}/trojita-obs-credentials`
    curl --connect-timeout 10 --max-time 10 --user $obsauth -X POST -H 'Content-Length: 0' 'https://api.opensuse.org/source/home:jkt-gentoo:trojita/trojita-nightly/?cmd=runservice' &>/dev/null
fi
