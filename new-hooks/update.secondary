#!/usr/bin/python

# Load dependencies
import os
import sys
from hooklib import Repository, Commit

def usage():
    print "Information needed to run could not be gathered successfully."
    print "Required environment variables: GIT_DIR, GL_USER, HOME"
    print "Syntax: update.secondary <refname> <oldsha> <newsha>"
    exit(1)

def maintenance():
    print "Sorry, but the repository you are trying to access is currently unavailable."
    print "This is to allow for maintenance, we apologise for any inconvience caused."
    print "If you believe this not to be the case, please contact sysadmin@kde.org."
    exit(1)
    
def backup_policy_violation():

    
# Read in input...
try:
    ref_name = sys.argv[1]
    old_sha1 = sys.argv[2]
    new_sha1 = sys.argv[3]
except IndexError:
    usage()

# Read needed environment variables
git_dir = os.getenv('GIT_DIR')
push_user = os.getenv('GL_USER')
user_home = os.getenv('HOME')
    
# Check for maintenance mode...
if( os.path.exists(user_home + "/.gitolite.down") or os.path.exists(git_dir + "/.gitolite.down") ):
    maintenance()
    
# Initialise the repository
repository = Repository( ref_name, old_sha1, new_sha1, push_user )

# Auditing - Repository
if repository.ref_type == RefType.Backup:
    print "ATTEMPTED BACKUP TAMPER DETECTED!"
    print "PUSH DECLINED - POLICY VIOLATION!"
    exit(1)

exit(0)
